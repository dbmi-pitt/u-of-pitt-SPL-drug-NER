; Sun Oct 11 15:50:33 MDT 2009
; 
;+ (version "3.3.1")
;+ (build "Build 430")


(defclass %3ACLIPS_TOP_LEVEL_SLOT_CLASS "Fake class to save top-level slot information"
	(is-a USER)
	(role abstract)
	(single-slot knowtator_annotator_id
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot knowtator_slot_match_criteria
		(type INSTANCE)
;+		(allowed-classes knowtator+complex+slot+match+criteria knowtator+simple+slot+match+criteria)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot knowtator_filter_set
		(type INSTANCE)
;+		(allowed-classes knowtator+set)
		(create-accessor read-write))
	(single-slot knowtator_consensus_accept_recursive
;+		(comment "determines the behavior of the \"accept\" button when in consensus mode.  If true, then the accepted annotation will be accepted along with all of the annotations corresonding to its slot values (recursively).  Similarly, the deleted annotation will be recursively deleted (all of its slot values will be deleted)")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot knowtator_slot_matcher_slot
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-SLOT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot knowtator_annotation_span
		(type STRING)
		(create-accessor read-write))
	(single-slot knowtator_annotation_annotator
		(type INSTANCE)
;+		(allowed-classes knowtator+annotator)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot knowtator_selected_filter
		(type INSTANCE)
;+		(allowed-classes knowtator+filter)
		(default [knowtator_Instance_0])
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_mention_class
		(type SYMBOL)
;+		(allowed-parents %3ATHING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot knowtator_types_not_selectable_from_text_viewer
		(type SYMBOL)
;+		(allowed-parents %3ATHING)
		(create-accessor read-write))
	(single-slot knowtator_selected_annotator
		(type INSTANCE)
;+		(allowed-classes knowtator+annotator)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_annotation_annotator_lastname
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot version
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_mention_instance
		(type INSTANCE)
;+		(allowed-classes %3ATHING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot knowtator_annotator_team_members
		(type INSTANCE)
;+		(allowed-classes knowtator+annotator)
		(create-accessor read-write))
	(single-slot knowtator_consensus_filter
;+		(comment "This slot captures the filter that is used to provide the annotations corresponding to the consensus set annotations.")
		(type INSTANCE)
;+		(allowed-classes knowtator+consensus+filter)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_subtext_slot
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-SLOT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_annotation_annotator_firstname
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_annotated_mention
		(type INSTANCE)
;+		(allowed-classes knowtator+mention)
;+		(cardinality 0 1)
;+		(inverse-slot knowtator_mention_annotation)
		(create-accessor read-write))
	(single-slot knowtator_mention_annotation
		(type INSTANCE)
;+		(allowed-classes knowtator+annotation)
;+		(cardinality 0 1)
;+		(inverse-slot knowtator_annotated_mention)
		(create-accessor read-write))
	(single-slot knowtator_display_color_R
		(type INTEGER)
		(range 0 255)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot knowtator_next_annotation_on_delete
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_set_name
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot knowtator_filter_annotator
		(type INSTANCE)
;+		(allowed-classes knowtator+annotator)
		(create-accessor read-write))
	(single-slot knowtator_class_match_criteria
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_tsc_implementation
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_mention_slot
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-SLOT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot knowtator_root_clses
		(type SYMBOL)
;+		(allowed-parents %3ATHING)
		(default %3ATHING)
		(create-accessor read-write))
	(single-slot knowtator_annotator_team_name
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot knowtator_annotation_annotator_affiliation
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_span_match_criteria
		(type SYMBOL)
		(allowed-values SpansMatchExactly SpansOverlap IgnoreSpans)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot knowtator_annotation_text_source
		(type INSTANCE)
;+		(allowed-classes knowtator+text+source)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_propogate_trivial_match
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_display_color_B
		(type INTEGER)
		(range 0 255)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot knowtator_annotation_creation_date
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot knowtator_fast_annotate
		(type SYMBOL)
;+		(allowed-parents %3ATHING)
		(create-accessor read-write))
	(multislot knowtator_set
		(type INSTANCE)
;+		(allowed-classes knowtator+set)
		(create-accessor read-write))
	(single-slot knowtator_display_color_G
		(type INTEGER)
		(range 0 255)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot knowtator_annotation_text
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_selected_annotation_set
		(type INSTANCE)
;+		(allowed-classes knowtator+set)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_fade_unselected_annotations
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_annotation_comment
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot knowtator_slot_matcher_simple_slots
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-SLOT)
		(create-accessor read-write))
	(single-slot knowtator_mentioned_in
		(type INSTANCE)
;+		(allowed-classes knowtator+instance+mention knowtator+class+mention)
;+		(cardinality 0 1)
;+		(inverse-slot knowtator_slot_mention)
		(create-accessor read-write))
	(single-slot knowtator_filter_name
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot knowtator_color_assignments
		(type INSTANCE)
;+		(allowed-classes knowtator+color+assignment)
		(create-accessor read-write))
	(multislot knowtator_filter_type
		(type SYMBOL)
;+		(allowed-parents %3ATHING)
		(create-accessor read-write))
	(single-slot knowtator_individual_filter
;+		(comment "This slot stores the filter that is used to provide the annotations created by individuals.")
		(type INSTANCE)
;+		(allowed-classes knowtator+filter)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_team_annotator
		(type INSTANCE)
;+		(allowed-classes knowtator+annotator+team)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_set_description
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_color_class
		(type SYMBOL)
;+		(allowed-parents %3ATHING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot knowtator_mention_slot_value
;+		(type ANY)
		(create-accessor read-write))
	(single-slot knowtator_truncate_covered_text
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_display_color_name
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot knowtator_active_filters
		(type INSTANCE)
;+		(allowed-classes knowtator+filter)
		(default [knowtator_Instance_0])
		(create-accessor read-write))
	(multislot knowtator_slot_mention
		(type INSTANCE)
;+		(allowed-classes knowtator+slot+mention)
;+		(inverse-slot knowtator_mentioned_in)
		(create-accessor read-write))
	(single-slot knowtator_display_color
		(type INSTANCE)
;+		(allowed-classes knowtator+display+color)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot knowtator_token_regex
		(type STRING)
		(default "\\W+")
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass knowtator+support+class
	(is-a USER)
	(role concrete))

(defclass knowtator+annotation
	(is-a knowtator+support+class)
	(role concrete)
	(single-slot knowtator_annotation_text_source
		(type INSTANCE)
;+		(allowed-classes knowtator+text+source)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_annotation_creation_date
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot knowtator_annotation_span
		(type STRING)
		(create-accessor read-write))
	(single-slot knowtator_annotated_mention
		(type INSTANCE)
;+		(allowed-classes knowtator+mention)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot knowtator_set
		(type INSTANCE)
;+		(allowed-classes knowtator+set)
		(create-accessor read-write))
	(single-slot knowtator_annotation_annotator
		(type INSTANCE)
;+		(allowed-classes knowtator+annotator)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot knowtator_annotation_text
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_annotation_comment
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass knowtator+mention
	(is-a knowtator+support+class)
	(role concrete)
	(single-slot knowtator_mention_annotation
		(type INSTANCE)
;+		(allowed-classes knowtator+annotation)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass knowtator+class+mention
	(is-a knowtator+mention)
	(role concrete)
	(multislot knowtator_slot_mention
		(type INSTANCE)
;+		(allowed-classes knowtator+slot+mention)
		(create-accessor read-write))
	(single-slot knowtator_mention_class
		(type SYMBOL)
;+		(allowed-parents %3ATHING)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass knowtator+instance+mention
	(is-a knowtator+mention)
	(role concrete)
	(single-slot knowtator_mention_instance
		(type INSTANCE)
;+		(allowed-classes %3ATHING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot knowtator_slot_mention
		(type INSTANCE)
;+		(allowed-classes knowtator+slot+mention)
		(create-accessor read-write)))

(defclass knowtator+slot+mention
	(is-a knowtator+mention)
	(role concrete)
	(single-slot knowtator_mentioned_in
		(type INSTANCE)
;+		(allowed-classes knowtator+instance+mention knowtator+class+mention)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot knowtator_mention_slot_value
;+		(type ANY)
		(create-accessor read-write))
	(single-slot knowtator_mention_slot
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-SLOT)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass knowtator+complex+slot+mention
	(is-a knowtator+slot+mention)
	(role concrete)
	(multislot knowtator_mention_slot_value
		(type INSTANCE)
;+		(allowed-classes knowtator+class+mention knowtator+instance+mention)
		(create-accessor read-write)))

(defclass knowtator+string+slot+mention
	(is-a knowtator+slot+mention)
	(role concrete)
	(multislot knowtator_mention_slot_value
		(type STRING)
		(create-accessor read-write)))

(defclass knowtator+integer+slot+mention
	(is-a knowtator+slot+mention)
	(role concrete)
	(multislot knowtator_mention_slot_value
		(type INTEGER)
		(create-accessor read-write)))

(defclass knowtator+float+slot+mention
	(is-a knowtator+slot+mention)
	(role concrete)
	(multislot knowtator_mention_slot_value
		(type FLOAT)
		(create-accessor read-write)))

(defclass knowtator+boolean+slot+mention
	(is-a knowtator+slot+mention)
	(role concrete)
	(multislot knowtator_mention_slot_value
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(create-accessor read-write)))

(defclass knowtator+text+source "A text source provides a \"pointer\" to some source of text.  The text itself is not actually stored in Protege.  The actual text associated with a text source instance is found based on two pieces of information, the name and type of the text source instance.  Each subclass of text source should correspond to a an extension of TextSource.java and TextSourceCollection.java.  These implementations are in charge of finding the texts based on the two aforementioned pieces of information."
	(is-a knowtator+support+class)
	(role concrete)
	(single-slot knowtator_annotation_comment
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass file+text+source
	(is-a knowtator+text+source)
	(role concrete))

(defclass file+line+text+source
	(is-a knowtator+text+source)
	(role concrete))

(defclass knowtator+annotator
	(is-a knowtator+support+class)
	(role concrete)
	(single-slot knowtator_annotator_id
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass knowtator+human+annotator
	(is-a knowtator+annotator)
	(role concrete)
	(single-slot knowtator_annotation_annotator_lastname
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_annotation_annotator_affiliation
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_annotation_annotator_firstname
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass knowtator+annotator+team
	(is-a knowtator+annotator)
	(role concrete)
	(multislot knowtator_annotator_team_members
		(type INSTANCE)
;+		(allowed-classes knowtator+annotator)
		(create-accessor read-write))
	(single-slot knowtator_annotator_team_name
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass knowtator+display+color
	(is-a knowtator+support+class)
	(role concrete)
	(single-slot knowtator_display_color_B
		(type INTEGER)
		(range 0 255)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot knowtator_display_color_G
		(type INTEGER)
		(range 0 255)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot knowtator_display_color_R
		(type INTEGER)
		(range 0 255)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot knowtator_display_color_name
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass knowtator+set
	(is-a knowtator+support+class)
	(role concrete)
	(single-slot knowtator_set_description
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_set_name
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass knowtator+consensus+set
	(is-a knowtator+set)
	(role concrete)
	(single-slot knowtator_consensus_filter
;+		(comment "This slot captures the filter that is used to provide the annotations corresponding to the consensus set annotations.")
		(type INSTANCE)
;+		(allowed-classes knowtator+consensus+filter)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_individual_filter
;+		(comment "This slot stores the filter that is used to provide the annotations created by individuals.")
		(type INSTANCE)
;+		(allowed-classes knowtator+filter)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_team_annotator
		(type INSTANCE)
;+		(allowed-classes knowtator+annotator+team)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass knowtator+filter "This class is used to filter the annotations that are viewed in the Knowtator tab.  For example, you might want to see only the annotations created by a single annotator and hide all others.  If one of the three slots contains no values, then that slot will be ignored.  Think of the three slots as being logically ANDed and the values in a given slot as being logically ORed.  This allows one to create a filter that basically says:\n(annotator1 OR annotator2) AND (annotationSet1 OR annotationSet2)"
	(is-a knowtator+support+class)
	(role concrete)
	(single-slot knowtator_filter_name
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot knowtator_filter_set
		(type INSTANCE)
;+		(allowed-classes knowtator+set)
		(create-accessor read-write))
	(multislot knowtator_filter_type
		(type SYMBOL)
;+		(allowed-parents %3ATHING)
		(create-accessor read-write))
	(multislot knowtator_types_not_selectable_from_text_viewer
		(type SYMBOL)
;+		(allowed-parents %3ATHING)
		(create-accessor read-write))
	(multislot knowtator_filter_annotator
		(type INSTANCE)
;+		(allowed-classes knowtator+annotator)
		(create-accessor read-write)))

(defclass knowtator+consensus+filter
	(is-a knowtator+filter)
	(role concrete)
	(multislot knowtator_filter_set
		(type INSTANCE)
;+		(allowed-classes knowtator+set)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot knowtator_filter_annotator
		(type INSTANCE)
;+		(allowed-classes knowtator+annotator)
		(cardinality 3 ?VARIABLE)
		(create-accessor read-write)))

(defclass knowtator+color+assignment
	(is-a knowtator+support+class)
	(role concrete)
	(single-slot knowtator_color_class
		(type SYMBOL)
;+		(allowed-parents %3ATHING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot knowtator_display_color
		(type INSTANCE)
;+		(allowed-classes knowtator+display+color)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass knowtator+text+source+collection+implementations
	(is-a knowtator+support+class)
	(role concrete)
	(single-slot knowtator_tsc_implementation
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass knowtator+complex+slot+match+criteria
	(is-a knowtator+support+class)
	(role concrete)
	(single-slot knowtator_span_match_criteria
		(type SYMBOL)
		(allowed-values SpansMatchExactly SpansOverlap IgnoreSpans)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot knowtator_propogate_trivial_match
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_slot_matcher_slot
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-SLOT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot knowtator_class_match_criteria
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot knowtator_slot_matcher_simple_slots
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-SLOT)
		(create-accessor read-write)))

(defclass knowtator+simple+slot+match+criteria
	(is-a knowtator+support+class)
	(role concrete)
	(single-slot knowtator_slot_matcher_slot
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-SLOT)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass knowtator+slot+matcher+config
	(is-a knowtator+support+class)
	(role concrete)
	(single-slot knowtator_span_match_criteria
		(type SYMBOL)
		(allowed-values SpansMatchExactly SpansOverlap IgnoreSpans)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot knowtator_slot_match_criteria
		(type INSTANCE)
;+		(allowed-classes knowtator+complex+slot+match+criteria knowtator+simple+slot+match+criteria)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot knowtator_class_match_criteria
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass knowtator+version
	(is-a knowtator+support+class)
	(role concrete)
	(single-slot version
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass knowtator+configuration
	(is-a knowtator+support+class)
	(role concrete)
	(single-slot knowtator_consensus_accept_recursive
;+		(comment "determines the behavior of the \"accept\" button when in consensus mode.  If true, then the accepted annotation will be accepted along with all of the annotations corresonding to its slot values (recursively).  Similarly, the deleted annotation will be recursively deleted (all of its slot values will be deleted)")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot knowtator_color_assignments
		(type INSTANCE)
;+		(allowed-classes knowtator+color+assignment)
		(create-accessor read-write))
	(single-slot knowtator_selected_filter
		(type INSTANCE)
;+		(allowed-classes knowtator+filter)
		(default [knowtator_Instance_0])
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot knowtator_root_clses
		(type SYMBOL)
;+		(allowed-parents %3ATHING)
		(default %3ATHING)
		(create-accessor read-write))
	(multislot knowtator_active_filters
		(type INSTANCE)
;+		(allowed-classes knowtator+filter)
		(default [knowtator_Instance_0])
		(create-accessor read-write))
	(single-slot knowtator_selected_annotator
		(type INSTANCE)
;+		(allowed-classes knowtator+annotator)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_subtext_slot
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-SLOT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot knowtator_fast_annotate
		(type SYMBOL)
;+		(allowed-parents %3ATHING)
		(create-accessor read-write))
	(single-slot knowtator_selected_annotation_set
		(type INSTANCE)
;+		(allowed-classes knowtator+set)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_fade_unselected_annotations
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_next_annotation_on_delete
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot knowtator_token_regex
		(type STRING)
		(default "\\W+")
;+		(cardinality 0 1)
		(create-accessor read-write)))